@model EditProjectViewModel

<div id="editProjectModal" class="modal">
  <div class="form-modal-dialog">
    <div class="form-modal-content">
      <div class="form-modal-header">
        <h3>Edit Project</h3>
        <button type="button" class="form-modal-close" data-close="true" data-target="#editProjectModal">
          <i class="fa-solid fa-xmark"></i>
        </button>
      </div>
      <div class="form-modal-body">
        <form id="projectForm" asp-action="UpdateProject" asp-controller="Projects" method="post"
          enctype="multipart/form-data" data-id="edit">
          <input type="hidden" id="Id" name="Id" />

          <!-- Project Image -->
          <div class="form-field">
            <label class="form-label" asp-for="ImageUrl"></label>
            <div class="image-upload">
              <div class="image-placeholder-container">
                <div class="image-placeholder project-image-placeholder">
                  <img src="" alt="Project Image" style="display: none;" />
                  <div class="upload-overlay">
                    <i class="fa-duotone fa-solid fa-camera"></i>
                  </div>
                </div>
                <input type="file" class="hidden-input" name="ProjectImage" accept="image/*" />
                <input type="hidden" id="CurrentProjectImage" name="CurrentProjectImage" />
              </div>
            </div>
            <span class="field-error" data-valmsg-for="ProjectImage"></span>
          </div>

          <!-- Project Name -->
          <div class="form-field">
            <label class="form-label" for="Name">Project Name</label>
            <input type="text" class="form-input" id="Name" name="Name" required placeholder="Type project name" />
            <span class="field-error" data-valmsg-for="Name"></span>
          </div>

          <!-- Client Selector -->
          @* <div class="form-field"> *@
          @*   @{ *@
          @*     var clientSelectorModel = new SelectorViewModel *@
          @*     { *@
          @*       Id = "projectClientSelect", *@
          @*       Label = "Client", *@
          @*       Placeholder = "Search clients...", *@
          @*       Icon = "fa-duotone fa-solid fa-search", *@
          @*       IsRequired = true, *@
          @*       HiddenInputName = "ClientId", *@
          @*       ValidationFor = "ClientId", *@
          @*       Items = (ViewBag.Clients != null)  *@
          @*         ? ((IEnumerable<dynamic>)ViewBag.Clients).Select(c => new SelectorItemViewModel *@
          @*         { *@
          @*           Id = c.Id, *@
          @*           Text = c.ClientName, *@
          @*           ImageUrl = c.ImageUrl *@
          @*         }).ToList() *@
          @*         : [] *@
          @*     }; *@
          @*   } *@
          @*   <partial name="Partials/Components/Selectors/_ClientSelector" model="@clientSelectorModel" /> *@
          @* </div> *@


          <!-- Description -->
          <div class="form-field">
            <label class="form-label" for="Description">Description</label>
            <textarea class="form-input" id="Description" name="Description" rows="3" placeholder="Type something"
              required></textarea>
            <span class="field-error" data-valmsg-for="Description"></span>
          </div>

          <div class="form-column">
            <!-- Start Date -->
            <div class="form-field half">
              <label class="form-label" for="StartDate">Start Date</label>
              <input type="date" class="form-input" id="StartDate" name="StartDate" required />
              <span class="field-error" data-valmsg-for="StartDate"></span>
            </div>

            <!-- End Date -->
            <div class="form-field half">
              <label class="form-label" for="EndDate">End Date</label>
              <input type="date" class="form-input" id="EndDate" name="EndDate" required />
              <span class="field-error" data-valmsg-for="EndDate"></span>
            </div>
          </div>

          <!-- Member Selector -->
          <div class="form-field">
            @{
              var memberItems = ViewBag.Members != null 
                ? ((IEnumerable<dynamic>)ViewBag.Members).Select(m => new SelectorItemViewModel
                {
                  Id = m.Id,
                  Text = $"{m.FirstName} {m.LastName}",
                  ImageUrl = m.Avatar
                }).ToList()
                : [];
    
              var memberSelectorModel = new SelectorViewModel
              {
                Id = "projectMemberSelect",
                Label = "Members",
                Placeholder = "Search members...",
                Icon = "fa-duotone fa-solid fa-search",
                IsMultiple = true,
                HiddenInputName = "UserId",
                ValidationFor = "UserId",
                Items = memberItems
              };
            }
            <partial name="Partials/Components/Selectors/_MemberSelector" model="@memberSelectorModel" />
          </div>
          
          <!-- Budget -->
          <div class="form-field">
            <label class="form-label" for="Budget">Budget</label>
            <div class="currency-input">
              <span class="currency-symbol">$</span>
              <input type="text" class="form-input" id="Budget" name="Budget" placeholder="0" />
            </div>
            <span class="field-error" data-valmsg-for="Budget"></span>
          </div>

          <!-- Submit Button -->
          <div class="form-actions">
            @{
              var buttonModel = new ButtonViewModel
              {
                Text = "Update",
                IsSubmit = true,
                Variant = "primary"
              };
            }
            <partial name="Partials/Components/ui/_Button" model="@buttonModel" />
          </div>
        </form>
      </div>
    </div>
  </div>
</div>


<script>
  document.addEventListener('DOMContentLoaded', function () {
    initWysiwygEditor(
      '#edit-project-description-editor', 
      '#edit-project-description-toolbar', 
      '#Description', 
      '@Html.Raw(Model?.Description ?? "")');
  });
</script>